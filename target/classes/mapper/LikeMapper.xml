<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.myproject.catchtable.mapper.LikeMapper">

    <!-- 사용자와 레스토랑으로 좋아요 정보 조회 -->
    <select id="findByUserAndRestaurant" parameterType="map" resultType="Like">
        SELECT * FROM restaurant_likes 
        WHERE user_id = #{userId} AND restaurant_id = #{restaurantId}
    </select>
    
    <!-- 좋아요 추가 -->
    <insert id="insertLike" parameterType="Like">
        INSERT INTO restaurant_likes (user_id, restaurant_id, created_at) 
        VALUES (#{userId}, #{restaurantId}, CURRENT_TIMESTAMP)
    </insert>
    
    <!-- 좋아요 삭제 -->
    <delete id="deleteLike" parameterType="map">
        DELETE FROM restaurant_likes 
        WHERE user_id = #{userId} AND restaurant_id = #{restaurantId}
    </delete>
    
    <!-- 레스토랑의 좋아요 개수 조회 -->
    <select id="countLikesByRestaurant" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM restaurant_likes WHERE restaurant_id = #{restaurantId}
    </select>
    
    <!-- 사용자의 좋아요 개수 조회 -->
    <select id="countLikesByUser" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM restaurant_likes WHERE user_id = #{userId}
    </select>
    
    <!-- 사용자가 좋아요한 레스토랑 ID 목록 조회 -->
    <select id="findRestaurantIdsByUser" parameterType="int" resultType="int">
        SELECT restaurant_id FROM restaurant_likes WHERE user_id = #{userId}
    </select>
    
    <!-- 레스토랑을 좋아요한 사용자 ID 목록 조회 -->
    <select id="findUserIdsByRestaurant" parameterType="int" resultType="int">
        SELECT user_id FROM restaurant_likes WHERE restaurant_id = #{restaurantId}
    </select>
    
    <!-- 인기 레스토랑 순위 조회 (좋아요 기준) -->
    <select id="findPopularRestaurantsByLikes" parameterType="int" resultType="map">
        SELECT r.restaurant_id, r.name, COUNT(rl.user_id) as likes_count
        FROM restaurants r 
        LEFT JOIN restaurant_likes rl ON r.restaurant_id = rl.restaurant_id
        GROUP BY r.restaurant_id, r.name
        ORDER BY likes_count DESC
        LIMIT #{limit}
    </select>
    
    <!-- 특정 기간의 좋아요 개수 조회 -->
    <select id="countLikesByPeriod" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM restaurant_likes 
        WHERE restaurant_id = #{restaurantId}
        <if test="period == 'day'">
            AND created_at >= DATE_SUB(NOW(), INTERVAL 1 DAY)
        </if>
        <if test="period == 'week'">
            AND created_at >= DATE_SUB(NOW(), INTERVAL 1 WEEK)
        </if>
        <if test="period == 'month'">
            AND created_at >= DATE_SUB(NOW(), INTERVAL 1 MONTH)
        </if>
    </select>
    
    <!-- 레스토랑의 모든 좋아요 삭제 -->
    <delete id="deleteAllLikesByRestaurant" parameterType="int">
        DELETE FROM restaurant_likes WHERE restaurant_id = #{restaurantId}
    </delete>
    
    <!-- 사용자의 모든 좋아요 삭제 -->
    <delete id="deleteAllLikesByUser" parameterType="int">
        DELETE FROM restaurant_likes WHERE user_id = #{userId}
    </delete>

</mapper>